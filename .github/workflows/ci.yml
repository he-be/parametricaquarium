# ワークフローの名前
name: CI/CD Pipeline - Cloudflare Workers

# ワークフローが実行されるタイミングを定義
on:
  # mainブランチにプッシュされた時
  push:
    branches: [ "main" ]
  # mainブランチに向けたプルリクエストが作成・更新された時
  pull_request:
    branches: [ "main" ]

# 実行される一連のタスク（ジョブ）を定義
jobs:
  # 品質チェック、テスト、ビルドを実行するジョブ
  build-and-test:
    # ジョブを実行する仮想環境の種類（最新のUbuntu）
    runs-on: ubuntu-latest

    # ジョブ内のステップ（実行されるコマンド）
    steps:
      # 1. リポジトリのコードを仮想環境にチェックアウトする
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Node.js環境をセットアップする
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # 使用するNode.jsのバージョンを指定
          node-version: '20.x'
          # npmの依存関係をキャッシュして、次回以降の実行を高速化する
          cache: 'npm'

      # 3. 依存関係をインストールする
      # 'npm install'ではなく'npm ci'を使うことで、package-lock.jsonに基づいた高速でクリーンなインストールを行う
      - name: Install dependencies
        run: npm ci

      # 4. コードの静的解析（リンター）を実行する
      - name: Run lint
        run: npm run lint

      # 5. TypeScriptの型チェックを実行する
      - name: Run typecheck
        run: npm run typecheck

      # 6. 単体テストを実行する
      - name: Run unit tests
        run: npm run test:unit

      # 7. カバレッジレポートを生成する
      - name: Generate coverage report
        run: npm run test:coverage

      # 8. カバレッジレポートをPRにコメントする
      - name: Coverage Report
        if: github.event_name == 'pull_request'
        uses: davelosert/vitest-coverage-report-action@v2

      # 9. Playwrightブラウザのインストール
      - name: Install Playwright browsers
        run: npx playwright install chromium

      # 10. E2Eテストを実行する（ヘッドレスモード）
      - name: Run E2E tests
        run: npm run test:e2e
        env:
          CI: true

      # 11. プロジェクトのビルド
      - name: Build project
        run: npm run build

  # Cloudflare Workers へのデプロイ（mainブランチのみ）
  deploy:
    name: Deploy to Cloudflare Workers
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build for Cloudflare Workers
        run: npm run build
      
      - name: Deploy to Cloudflare Workers
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
